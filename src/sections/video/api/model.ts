// Copied code from docs-ui/packages\scripts\src\admin\video\model.ts

export interface VideoEntry {
	resourceId?: string;
	id: string;
	originalFileName?: string;
	createdBy?: Owner;
	updatedBy?: Owner;
	publishedBy?: Owner;
	createTime?: Date;
	updateTime?: Date;
	publishTime?: Date;
	title?: string;
	description?: string;
	tags?: string[];
	captureAt?: string;
	draftVideo?: {
		highQualityVideoUrl?: string;
		mediumQualityVideoUrl?: string;
		lowQualityVideoUrl?: string;
		adaptiveVideoUrl?: string;
		audioUrl?: string;
		captureAt?: string;
		thumbnail?: ThumbnailProperties;
		thumbnailOtherSizes?: {
			additionalProp1: ThumbnailProperties;
			additionalProp2: ThumbnailProperties;
			additionalProp3: ThumbnailProperties;
		};
		detailedJobStatus?: {
			videoJob: Job;
			thumbnailJob: Job;
			subPlyJob: Job;
		};
		captions?: Caption[];
		job?: Partial<Job>;
		durationInMillisecond?: number;
		canceledFailedCaptions?: boolean;
		captionAttempts?: number;
	};
	publicVideo?: {
		highQualityVideoUrl: string;
		mediumQualityVideoUrl: string;
		lowQualityVideoUrl: string;
		adaptiveVideoUrl: string;
		audioUrl: string;
		thumbnail: ThumbnailProperties;
		thumbnailOtherSizes: {
			additionalProp1: ThumbnailProperties;
			additionalProp2: ThumbnailProperties;
			additionalProp3: ThumbnailProperties;
		};
		captions: Caption[];
		durationInMillisecond?: number;
	};
	tempResources?: TempResource[];
	externalVideoUrl?: string;
	youTubeUrl?: string;
	useInterestingFrameAsThumbnail?: boolean;
	owners?: Owner[];
	sourceVideoUploadUrl?: string;
	requestCaptions?: boolean;
	cancelCaptions?: boolean;
}

export interface Owner {
	email: string;
	name: string;
	id: string;
}

export enum JobStatus {
	processing = 'Processing',
	finished = 'Finished',
	scheduled = 'Scheduled',
	default = 'Default',
	systemError = 'SystemError'
}

export interface TempResource {
	id: string;
	url: string;
	resourceType: string;
	language?: string;
}

export interface Caption {
	language: string;
	id: string;
	isAutoGenerated: boolean;
	url: string;
	name: string;
}

interface Job {
	status: JobStatus;
	createTime: Date;
	endTime: Date;
}

interface ThumbnailProperties {
	id: string;
	isAutoGenerated: boolean;
	url: string;
}

// Pulled code from docs-ui/packages/scripts/src/list-view-models.ts
/**
 * A page of data.
 * API calls are mapped to this interface for use in the ListViewModel.
 */
 export interface Page<T> {
	/**
	 * This page's items.
	 */
	items: T[];

	/**
	 * Total number of items on the server.
	 */
	totalCount: number;

    pageIndex: number;
    pageSize: number;
}